scalar DateTime

type Item {
  id: ID!
  item_name: String!
  title: String!
  category: Category!
  date_found: DateTime
  date_posted: DateTime!
  owner: User!
  location: Location!
  filename: String!
  description: String!
  identifiers: [String]
}

enum Category {
Shells
Seaglass
Fossils
Stones
Driftwood
Misc
}

type Location {
  type: String!
  coordinates: [Float]!
}

input Coordinates {
  lat: Float!
  lng: Float!
}

input LocationInput {
  type: String!
  coordinates: [Float]!
}

type Query {
  itemById(id: ID!): Item
  items: [Item]
  itemsByArea(topRight: Coordinates!, bottomLeft: Coordinates!): [Item]
  itemsByOwner(ownerId: ID!): [Item]
  itemsByCategory(category: String!): [Item]
  itemsByIdentifiers(identifiers: [String]!): [Item]
}

input ItemInput {
  item_name: String!
  title: String!
  category: Category!
  date_found: DateTime
  location: LocationInput!
  filename: String!
  description: String!
  identifiers: [String]
}

input ItemModify {
  item_name: String!
  title: String!
  category: Category!
  date_found: DateTime
  location: LocationInput!
  description: String!
  identifiers: [String]
}

type Mutation {
  createItem(input: ItemInput!): Item
  """
  Role 'admin' or 'user' are determined by the token
  """
  updateItem(id: ID!, input: ItemModify!): Item
  """
  Role 'admin' or 'user' are determined by the token
  """
  deleteItem(id: ID!): Item
}